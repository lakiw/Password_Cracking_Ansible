---
# Responsible for downloading wordlists that
# are publicly available that I always want on my cracking system


# Make the top level wordlist folder
- name: Create wordlist directory
  ansible.builtin.file:
    path: "{{ wordlist_dir }}"
    state: directory
    mode: '0755'

# Download common wordlists
- name: Download dic0294
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/trapd00r/Documentation/refs/heads/master/wordlists/dic-0294.txt
    dest: "{{ wordlist_dir }}"
    force: no

- name: Download RockYou (unique)
  ansible.builtin.get_url:
    url: https://hashmob.net/api/v2/downloads/research/wordlists/rockyou.txt
    dest: "{{ wordlist_dir }}"
    force: no

- name: Download zxcvbn
  ansible.builtin.get_url:
    url: https://hashmob.net/api/v2/downloads/research/wordlists/zxcvbn.txt
    dest: "{{ wordlist_dir }}"
    force: no

# The following chunk of tasks relate to downloading hasmob found lists
# which also requries 7zip
#
# Note, this always updates with the new founds each time this is run
# which is why it's only run when "do_download_found_lists" is enabled
#
- block:

  - name: Create hashmob found directory
    ansible.builtin.file:
      path: "{{ wordlist_dir }}/hashmob"
      state: directory
      mode: '0755'

  - name: Install p7zip-full
    become: true
    ansible.builtin.apt:
      name: p7zip-full
      update_cache: yes

  - name: Download JSON file of Hashmob wordlists
    ansible.builtin.uri:
      url: "https://hashmob.net/api/v2/downloads/research/official/"
      method: GET
      return_content: true
    register: hashmob_response_json

  - name: Get the hashmob filenames
    ansible.builtin.set_fact:
      hashmob_wordlist_list: "{{ hashmob_wordlist_list | replace(item, item | combine({'file_name': (hashmob_response_json |  community.general.json_query('json') | selectattr('id', 'equalto', item.id) | first).file_name  })) }}"
    loop: "{{ hashmob_wordlist_list }}"
    loop_control:
      label: "{{ item.name }}"

  - name: debug
    ansible.builtin.debug:
      msg: "{{ hashmob_wordlist_list }}"

  - name: Download hashmob wordlists
    ansible.builtin.get_url:
      url: "https://hashmob.net/api/v2/downloads/research/official/{{ item.file_name }}"
      dest: "{{ wordlist_dir }}/hashmob/"
      force: true
    loop: "{{ hashmob_wordlist_list }}"
    loop_control:
      label: "{{ item.name }}"

  - name: Rename hashmob wordlists to remove dates
    ansible.builtin.command: "7za rn {{ item.file_name }} {{ item.file_name[:-3] }} {{ item.name }}"
    loop: "{{ hashmob_wordlist_list }}"
    loop_control:
      label: "{{ item.name }}"
    args:
      chdir: "{{ wordlist_dir }}/hashmob/"

  - name: Unzip hashmob wordlist
    ansible.builtin.command: "7za x -y {{ item.file_name }}"
    loop: "{{ hashmob_wordlist_list }}"
    loop_control:
      label: "{{ item.name }}"
    args:
      chdir: "{{ wordlist_dir }}/hashmob/"

  - name: Delete hashmob wordlist 7z
    ansible.builtin.file:
      path: "{{ wordlist_dir }}/hashmob/{{ item.file_name }}"
      state: absent
    loop: "{{ hashmob_wordlist_list }}"
    loop_control:
      label: "{{ item.name }}"

  when: do_download_found_lists